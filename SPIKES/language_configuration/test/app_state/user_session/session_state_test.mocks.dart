// Mocks generated by Mockito 5.3.0 from annotations
// in wayat/test/app_state/user_session/session_state_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:google_sign_in/google_sign_in.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wayat/domain/user/my_user.dart' as _i2;
import 'package:wayat/services/authentication/auth_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMyUser_0 extends _i1.SmartFake implements _i2.MyUser {
  _FakeMyUser_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGoogleSignInAuthentication_1 extends _i1.SmartFake
    implements _i3.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i4.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(Invocation.method(#signIn, []),
              returnValue: _i5.Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<String> getIdToken() =>
      (super.noSuchMethod(Invocation.method(#getIdToken, []),
          returnValue: _i5.Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
      Invocation.method(#signOut, []),
      returnValue: _i5.Future<void>.value(),
      returnValueForMissingStub: _i5.Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i2.MyUser> getUserData() =>
      (super.noSuchMethod(Invocation.method(#getUserData, []),
              returnValue: _i5.Future<_i2.MyUser>.value(
                  _FakeMyUser_0(this, Invocation.method(#getUserData, []))))
          as _i5.Future<_i2.MyUser>);
  @override
  _i5.Future<_i3.GoogleSignInAccount?> signInSilently() =>
      (super.noSuchMethod(Invocation.method(#signInSilently, []),
              returnValue: _i5.Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<bool> sendPhoneNumber(String? phone) =>
      (super.noSuchMethod(Invocation.method(#sendPhoneNumber, [phone]),
          returnValue: _i5.Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<bool> sendDoneOnboarding(bool? doneOnboarding) => (super
      .noSuchMethod(Invocation.method(#sendDoneOnboarding, [doneOnboarding]),
          returnValue: _i5.Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i3.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email =>
      (super.noSuchMethod(Invocation.getter(#email), returnValue: '')
          as String);
  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  _i5.Future<_i3.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(Invocation.getter(#authentication),
              returnValue: _i5.Future<_i3.GoogleSignInAuthentication>.value(
                  _FakeGoogleSignInAuthentication_1(
                      this, Invocation.getter(#authentication))))
          as _i5.Future<_i3.GoogleSignInAuthentication>);
  @override
  _i5.Future<Map<String, String>> get authHeaders =>
      (super.noSuchMethod(Invocation.getter(#authHeaders),
              returnValue:
                  _i5.Future<Map<String, String>>.value(<String, String>{}))
          as _i5.Future<Map<String, String>>);
  @override
  _i5.Future<void> clearAuthCache() => (super.noSuchMethod(
      Invocation.method(#clearAuthCache, []),
      returnValue: _i5.Future<void>.value(),
      returnValueForMissingStub: _i5.Future<void>.value()) as _i5.Future<void>);
}
