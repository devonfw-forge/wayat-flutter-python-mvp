// Mocks generated by Mockito 5.3.0 from annotations
// in wayat/test/features/authentication/phone_validation_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter/material.dart' as _i9;
import 'package:intl_phone_field/phone_number.dart' as _i8;
import 'package:mobx/mobx.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wayat/app_state/user_session/session_state.dart' as _i5;
import 'package:wayat/domain/user/my_user.dart' as _i4;
import 'package:wayat/features/profile/controllers/phone_verification_controller.dart'
    as _i7;
import 'package:wayat/services/authentication/auth_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthService_0 extends _i1.SmartFake implements _i2.AuthService {
  _FakeAuthService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_1 extends _i1.SmartFake
    implements _i3.ReactiveContext {
  _FakeReactiveContext_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMyUser_2 extends _i1.SmartFake implements _i4.MyUser {
  _FakeMyUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SessionState].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionState extends _i1.Mock implements _i5.SessionState {
  MockSessionState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get finishLoggedIn => (super.noSuchMethod(
        Invocation.getter(#finishLoggedIn),
        returnValue: false,
      ) as bool);
  @override
  set finishLoggedIn(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #finishLoggedIn,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get googleSignedIn => (super.noSuchMethod(
        Invocation.getter(#googleSignedIn),
        returnValue: false,
      ) as bool);
  @override
  set googleSignedIn(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #googleSignedIn,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasDoneOnboarding => (super.noSuchMethod(
        Invocation.getter(#hasDoneOnboarding),
        returnValue: false,
      ) as bool);
  @override
  set hasDoneOnboarding(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasDoneOnboarding,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentUser(_i4.MyUser? value) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.AuthService get authService => (super.noSuchMethod(
        Invocation.getter(#authService),
        returnValue: _FakeAuthService_0(
          this,
          Invocation.getter(#authService),
        ),
      ) as _i2.AuthService);
  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_1(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);
  @override
  _i6.Future<void> doneOnBoarding() => (super.noSuchMethod(
        Invocation.method(
          #doneOnBoarding,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> isLogged() => (super.noSuchMethod(
        Invocation.method(
          #isLogged,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void setGoogleSignIn(bool? signedIn) => super.noSuchMethod(
        Invocation.method(
          #setGoogleSignIn,
          [signedIn],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setFinishLoggedIn(bool? finishedLoggedIn) => super.noSuchMethod(
        Invocation.method(
          #setFinishLoggedIn,
          [finishedLoggedIn],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<dynamic> initializeUser() => (super.noSuchMethod(
        Invocation.method(
          #initializeUser,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> updateCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #updateCurrentUser,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<bool> updatePhone(String? phone) => (super.noSuchMethod(
        Invocation.method(
          #updatePhone,
          [phone],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<bool> setDoneOnBoarding() => (super.noSuchMethod(
        Invocation.method(
          #setDoneOnBoarding,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<dynamic> doLoginProcess() => (super.noSuchMethod(
        Invocation.method(
          #doLoginProcess,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> initializeUserSession() => (super.noSuchMethod(
        Invocation.method(
          #initializeUserSession,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<void> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<dynamic> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  bool isOnboardingCompleted() => (super.noSuchMethod(
        Invocation.method(
          #isOnboardingCompleted,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool hasPhone() => (super.noSuchMethod(
        Invocation.method(
          #hasPhone,
          [],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [PhoneVerificationController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhoneVerificationController extends _i1.Mock
    implements _i7.PhoneVerificationController {
  MockPhoneVerificationController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MyUser get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeMyUser_2(
          this,
          Invocation.getter(#user),
        ),
      ) as _i4.MyUser);
  @override
  String get phoneNumber => (super.noSuchMethod(
        Invocation.getter(#phoneNumber),
        returnValue: '',
      ) as String);
  @override
  set phoneNumber(String? value) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get errorPhoneVerificationMsg => (super.noSuchMethod(
        Invocation.getter(#errorPhoneVerificationMsg),
        returnValue: '',
      ) as String);
  @override
  set errorPhoneVerificationMsg(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorPhoneVerificationMsg,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get errorPhoneFormat => (super.noSuchMethod(
        Invocation.getter(#errorPhoneFormat),
        returnValue: '',
      ) as String);
  @override
  set errorPhoneFormat(String? value) => super.noSuchMethod(
        Invocation.setter(
          #errorPhoneFormat,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get validPhone => (super.noSuchMethod(
        Invocation.getter(#validPhone),
        returnValue: false,
      ) as bool);
  @override
  set validPhone(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #validPhone,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_1(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.ReactiveContext);
  @override
  void setNewPhoneNumber(String? phone) => super.noSuchMethod(
        Invocation.method(
          #setNewPhoneNumber,
          [phone],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setValidPhoneNumber(String? phone) => super.noSuchMethod(
        Invocation.method(
          #setValidPhoneNumber,
          [phone],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setErrorPhoneMsg(String? msg) => super.noSuchMethod(
        Invocation.method(
          #setErrorPhoneMsg,
          [msg],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String validatePhoneNumber(dynamic textValue) => (super.noSuchMethod(
        Invocation.method(
          #validatePhoneNumber,
          [textValue],
        ),
        returnValue: '',
      ) as String);
  @override
  void onChangePhoneNumber(
    _i8.PhoneNumber? phone,
    _i9.GlobalKey<_i9.FormState>? formKey,
    _i9.BuildContext? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onChangePhoneNumber,
          [
            phone,
            formKey,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
