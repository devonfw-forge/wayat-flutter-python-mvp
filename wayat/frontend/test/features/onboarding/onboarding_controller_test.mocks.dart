// Mocks generated by Mockito 5.3.0 from annotations
// in wayat/test/onboarding_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/cupertino.dart' as _i8;
import 'package:mobx/mobx.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wayat/domain/contact/contact.dart' as _i7;
import 'package:wayat/features/onboarding/controller/onboarding_controller.dart'
    as _i4;
import 'package:wayat/features/onboarding/controller/onboarding_progress.dart'
    as _i6;
import 'package:wayat/features/onboarding/controller/onboarding_state.dart'
    as _i5;
import 'package:wayat/services/contact/contact_service.dart' as _i2;
import 'package:wayat/services/contact/import_phones_service_impl.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeContactService_0 extends _i1.SmartFake
    implements _i2.ContactService {
  _FakeContactService_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeObservableMap_1<K, V> extends _i1.SmartFake
    implements _i3.ObservableMap<K, V> {
  _FakeObservableMap_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeReactiveContext_2 extends _i1.SmartFake
    implements _i3.ReactiveContext {
  _FakeReactiveContext_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [OnboardingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnboardingController extends _i1.Mock
    implements _i4.OnboardingController {
  MockOnboardingController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ContactService get contactService => (super.noSuchMethod(
          Invocation.getter(#contactService),
          returnValue:
              _FakeContactService_0(this, Invocation.getter(#contactService)))
      as _i2.ContactService);
  @override
  set contactService(_i2.ContactService? _contactService) =>
      super.noSuchMethod(Invocation.setter(#contactService, _contactService),
          returnValueForMissingStub: null);
  @override
  _i5.OnBoardingState get onBoardingState =>
      (super.noSuchMethod(Invocation.getter(#onBoardingState),
          returnValue: _i5.OnBoardingState.NotStarted) as _i5.OnBoardingState);
  @override
  set onBoardingState(_i5.OnBoardingState? value) =>
      super.noSuchMethod(Invocation.setter(#onBoardingState, value),
          returnValueForMissingStub: null);
  @override
  _i6.OnBoardingProgress get currentPage =>
      (super.noSuchMethod(Invocation.getter(#currentPage),
              returnValue: _i6.OnBoardingProgress.initialManageContactsTip)
          as _i6.OnBoardingProgress);
  @override
  set currentPage(_i6.OnBoardingProgress? value) =>
      super.noSuchMethod(Invocation.setter(#currentPage, value),
          returnValueForMissingStub: null);
  @override
  _i3.ObservableMap<_i7.Contact, bool> get contacts =>
      (super.noSuchMethod(Invocation.getter(#contacts),
              returnValue: _FakeObservableMap_1<_i7.Contact, bool>(
                  this, Invocation.getter(#contacts)))
          as _i3.ObservableMap<_i7.Contact, bool>);
  @override
  set contacts(_i3.ObservableMap<_i7.Contact, bool>? value) =>
      super.noSuchMethod(Invocation.setter(#contacts, value),
          returnValueForMissingStub: null);
  @override
  List<_i7.Contact> get contactList =>
      (super.noSuchMethod(Invocation.getter(#contactList),
          returnValue: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  List<_i7.Contact> get selectedContacts =>
      (super.noSuchMethod(Invocation.getter(#selectedContacts),
          returnValue: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  List<_i7.Contact> get unselectedContacts =>
      (super.noSuchMethod(Invocation.getter(#unselectedContacts),
          returnValue: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  _i3.ReactiveContext get context =>
      (super.noSuchMethod(Invocation.getter(#context),
              returnValue:
                  _FakeReactiveContext_2(this, Invocation.getter(#context)))
          as _i3.ReactiveContext);
  @override
  void importContacts() =>
      super.noSuchMethod(Invocation.method(#importContacts, []),
          returnValueForMissingStub: null);
  @override
  bool isSelected(_i7.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(#isSelected, [contact]),
          returnValue: false) as bool);
  @override
  void finishOnBoarding(_i8.BuildContext? context) =>
      super.noSuchMethod(Invocation.method(#finishOnBoarding, [context]),
          returnValueForMissingStub: null);
  @override
  void progressTo(_i6.OnBoardingProgress? newPage) =>
      super.noSuchMethod(Invocation.method(#progressTo, [newPage]),
          returnValueForMissingStub: null);
  @override
  bool moveBack() =>
      (super.noSuchMethod(Invocation.method(#moveBack, []), returnValue: false)
          as bool);
  @override
  void updateSelected(_i7.Contact? contact) =>
      super.noSuchMethod(Invocation.method(#updateSelected, [contact]),
          returnValueForMissingStub: null);
  @override
  void addAll(List<_i7.Contact>? contactList) =>
      super.noSuchMethod(Invocation.method(#addAll, [contactList]),
          returnValueForMissingStub: null);
  @override
  void setOnBoardingState(_i5.OnBoardingState? state) =>
      super.noSuchMethod(Invocation.method(#setOnBoardingState, [state]),
          returnValueForMissingStub: null);
}

/// A class which mocks [ContactsAddressServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsAddressServiceImpl extends _i1.Mock
    implements _i9.ContactsAddressServiceImpl {
  MockContactsAddressServiceImpl() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [OnboardingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnboardingRelaxed extends _i1.Mock
    implements _i4.OnboardingController {
  @override
  _i2.ContactService get contactService => (super.noSuchMethod(
          Invocation.getter(#contactService),
          returnValue:
              _FakeContactService_0(this, Invocation.getter(#contactService)),
          returnValueForMissingStub:
              _FakeContactService_0(this, Invocation.getter(#contactService)))
      as _i2.ContactService);
  @override
  set contactService(_i2.ContactService? _contactService) =>
      super.noSuchMethod(Invocation.setter(#contactService, _contactService),
          returnValueForMissingStub: null);
  @override
  _i5.OnBoardingState get onBoardingState =>
      (super.noSuchMethod(Invocation.getter(#onBoardingState),
              returnValue: _i5.OnBoardingState.NotStarted,
              returnValueForMissingStub: _i5.OnBoardingState.NotStarted)
          as _i5.OnBoardingState);
  @override
  set onBoardingState(_i5.OnBoardingState? value) =>
      super.noSuchMethod(Invocation.setter(#onBoardingState, value),
          returnValueForMissingStub: null);
  @override
  _i6.OnBoardingProgress get currentPage =>
      (super.noSuchMethod(Invocation.getter(#currentPage),
          returnValue: _i6.OnBoardingProgress.initialManageContactsTip,
          returnValueForMissingStub: _i6.OnBoardingProgress
              .initialManageContactsTip) as _i6.OnBoardingProgress);
  @override
  set currentPage(_i6.OnBoardingProgress? value) =>
      super.noSuchMethod(Invocation.setter(#currentPage, value),
          returnValueForMissingStub: null);
  @override
  _i3.ObservableMap<_i7.Contact, bool> get contacts => (super.noSuchMethod(
          Invocation.getter(#contacts),
          returnValue: _FakeObservableMap_1<_i7.Contact, bool>(
              this, Invocation.getter(#contacts)),
          returnValueForMissingStub: _FakeObservableMap_1<_i7.Contact, bool>(
              this, Invocation.getter(#contacts)))
      as _i3.ObservableMap<_i7.Contact, bool>);
  @override
  set contacts(_i3.ObservableMap<_i7.Contact, bool>? value) =>
      super.noSuchMethod(Invocation.setter(#contacts, value),
          returnValueForMissingStub: null);
  @override
  List<_i7.Contact> get contactList =>
      (super.noSuchMethod(Invocation.getter(#contactList),
          returnValue: <_i7.Contact>[],
          returnValueForMissingStub: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  List<_i7.Contact> get selectedContacts =>
      (super.noSuchMethod(Invocation.getter(#selectedContacts),
          returnValue: <_i7.Contact>[],
          returnValueForMissingStub: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  List<_i7.Contact> get unselectedContacts =>
      (super.noSuchMethod(Invocation.getter(#unselectedContacts),
          returnValue: <_i7.Contact>[],
          returnValueForMissingStub: <_i7.Contact>[]) as List<_i7.Contact>);
  @override
  _i3.ReactiveContext get context => (super.noSuchMethod(
      Invocation.getter(#context),
      returnValue: _FakeReactiveContext_2(this, Invocation.getter(#context)),
      returnValueForMissingStub: _FakeReactiveContext_2(
          this, Invocation.getter(#context))) as _i3.ReactiveContext);
  @override
  void importContacts() =>
      super.noSuchMethod(Invocation.method(#importContacts, []),
          returnValueForMissingStub: null);
  @override
  bool isSelected(_i7.Contact? contact) =>
      (super.noSuchMethod(Invocation.method(#isSelected, [contact]),
          returnValue: false, returnValueForMissingStub: false) as bool);
  @override
  void finishOnBoarding(_i8.BuildContext? context) =>
      super.noSuchMethod(Invocation.method(#finishOnBoarding, [context]),
          returnValueForMissingStub: null);
  @override
  void progressTo(_i6.OnBoardingProgress? newPage) =>
      super.noSuchMethod(Invocation.method(#progressTo, [newPage]),
          returnValueForMissingStub: null);
  @override
  bool moveBack() => (super.noSuchMethod(Invocation.method(#moveBack, []),
      returnValue: false, returnValueForMissingStub: false) as bool);
  @override
  void updateSelected(_i7.Contact? contact) =>
      super.noSuchMethod(Invocation.method(#updateSelected, [contact]),
          returnValueForMissingStub: null);
  @override
  void addAll(List<_i7.Contact>? contactList) =>
      super.noSuchMethod(Invocation.method(#addAll, [contactList]),
          returnValueForMissingStub: null);
  @override
  void setOnBoardingState(_i5.OnBoardingState? state) =>
      super.noSuchMethod(Invocation.method(#setOnBoardingState, [state]),
          returnValueForMissingStub: null);
}

/// A class which mocks [ContactsAddressServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsAddressServiceImplRelaxed extends _i1.Mock
    implements _i9.ContactsAddressServiceImpl {}
